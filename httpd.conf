#
# This is the main Apache HTTP server configuration file.  It contains the
# configuration directives that give the server its instructions.
# See <URL:http://httpd.apache.org/docs/2.4/> for detailed information.
# In particular, see 
# <URL:http://httpd.apache.org/docs/2.4/mod/directives.html>
# for a discussion of each configuration directive.
#
# Do NOT simply read the instructions in here without understanding
# what they do.  They're here only as hints or reminders.  If you are unsure
# consult the online docs. You have been warned.  
#
# Configuration and logfile names: If the filenames you specify for many
# of the server's control files begin with "/" (or "drive:/" for Win32), the
# server will use that explicit path.  If the filenames do *not* begin
# with "/", the value of ServerRoot is prepended -- so "logs/access_log"
# with ServerRoot set to "/usr/local/apache2" will be interpreted by the
# server as "/usr/local/apache2/logs/access_log", whereas "/logs/access_log" 
# will be interpreted as '/logs/access_log'.

#
# ServerRoot: The top of the directory tree under which the server's
# configuration, error, and log files are kept.
#
# Do not add a slash at the end of the directory path.  If you point
# ServerRoot at a non-local disk, be sure to specify a local disk on the
# Mutex directive, if file-based mutexes are used.  If you wish to share the
# same ServerRoot for multiple httpd daemons, you will need to change at
# least PidFile.
#
#ServerRoot "/usr"

#
# Mutex: Allows you to set the mutex mechanism and mutex file directory
# for individual mutexes, or change the global defaults
#
# Uncomment and change the directory if mutexes are file-based and the default
# mutex file directory is not on a local disk or is not appropriate for some
# other reason.
#
# Mutex default:/private/var/run

#
# Listen: Allows you to bind Apache to specific IP addresses and/or
# ports, instead of the default. See also the <VirtualHost>
# directive.
#
# Change this to Listen on specific IP addresses as shown below to 
# prevent Apache from glomming onto all bound IP addresses.
#
#Listen 12.34.56.78:80
#Listen 80

#
# Dynamic Shared Object (DSO) Support
#
# To be able to use the functionality of a module which was built as a DSO you
# have to place corresponding `LoadModule' lines at this location so the
# directives contained in it are actually available _before_ they are used.
# Statically compiled modules (those listed by `httpd -l') do not need
# to be loaded here.
#
# Example:
# LoadModule foo_module modules/mod_foo.so
#
#

LoadModule perl_module libexec/apache2/mod_perl.so

#
#	LXR Apache server configuration
#
#	$Id: apache-lxrserver.conf,v 1.9 2014/03/10 16:40:27 ajlittoz Exp $
#
#
# Cannot grant Apache 2.2/2.4 implicit compatibility because Require
# directive syntax and semantics changed between releases.
# When updating 2.2 -> 2.4, uncomment 2.4 specific lines

# =================================================
# -------             Port list             -------
#
#	(only if different from 80, 8080 or 443)
#	NOTE: remove duplicate ports since they cause trouble
#	      and uncomment the remaining ones.

#@here_ports:


#@here_hosts:


# =================================================
#
# -------    URL mapping to LXR directory    ------
#
Alias /lxr /etc/lxr-2.0.3
#@here_alias:


# =================================================
#
# -----------    Perl security checks   -----------
#
#	If these checks cause trouble (i.e. too many
#	error or warning messages in Apache's error log),
#	comment out the lines.
<IfDefine MODPERL2>
	PerlSwitches -T
</IfDefine>
<IfDefine !MODPERL2>
	PerlTaintCheck On
</IfDefine>


# =================================================
#
# ----------- LXR startup configuration -----------
#
# 	This is valid only for Apache 2.x
#	Apache 1.x requires manual modification of Perl library.
#	See LXR installation manual
<IfModule mod_version.c>
	# Assume Apache 2.x and above since mod_version appeared in 2.0
	# This is safer than using <IfVersion> since this tag
	# causes an error with 1.x
	# However, when this configuration file is parsed,
	# mod_perl may not yet be loaded; consequently, the older
	# directive is used. Happily, it is still recognised by newer
	# versions of mod_perl.
	<IfDefine MODPERL2>
	# ----------------> absolute path to the LXR root directory
		PerlPostConfigRequire /etc/lxr-2.0.3/custom.d/apache2-require.pl
	</IfDefine>
	<IfDefine !MODPERL2>
	# ----------------> absolute path to the LXR root directory
		PerlRequire /etc/lxr-2.0.3/custom.d/apache2-require.pl
	</IfDefine>
</IfModule>



# =================================================
#
# -----------    LXR directory access   -----------
#
# ----------------> absolute path to the LXR root directory
<Directory "/etc/lxr-2.0.3">
	Options FollowSymLinks Includes ExecCGI Indexes
	AllowOverride AuthConfig FileInfo Limit Options
	Require all granted
</Directory>

<Directory "/etc/lxr-2.0.3/templates">
        SetHandler send-as-is
        Options FollowSymLinks Includes ExecCGI Indexes
        AllowOverride AuthConfig FileInfo Limit Options
        Require all granted
</Directory>
